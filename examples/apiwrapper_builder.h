#ifndef APIWRAPPER_BUILDER_H
#define APIWRAPPER_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef APIWRAPPER_READER_H
#include "apiwrapper_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __FunctionAddresses_required[] = { 0 };
typedef flatbuffers_ref_t FunctionAddresses_ref_t;
static FunctionAddresses_ref_t FunctionAddresses_clone(flatbuffers_builder_t *B, FunctionAddresses_table_t t);
__flatbuffers_build_table(flatbuffers_, FunctionAddresses, 2)

#define __FunctionAddresses_formal_args , flatbuffers_string_vec_ref_t v0, flatbuffers_uint64_vec_ref_t v1
#define __FunctionAddresses_call_args , v0, v1
static inline FunctionAddresses_ref_t FunctionAddresses_create(flatbuffers_builder_t *B __FunctionAddresses_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, FunctionAddresses, FunctionAddresses_file_identifier, FunctionAddresses_type_identifier)

__flatbuffers_build_string_vector_field(0, flatbuffers_, FunctionAddresses_names, FunctionAddresses)
__flatbuffers_build_vector_field(1, flatbuffers_, FunctionAddresses_addrs, flatbuffers_uint64, uint64_t, FunctionAddresses)

static inline FunctionAddresses_ref_t FunctionAddresses_create(flatbuffers_builder_t *B __FunctionAddresses_formal_args)
{
    if (FunctionAddresses_start(B)
        || FunctionAddresses_names_add(B, v0)
        || FunctionAddresses_addrs_add(B, v1)) {
        return 0;
    }
    return FunctionAddresses_end(B);
}

static FunctionAddresses_ref_t FunctionAddresses_clone(flatbuffers_builder_t *B, FunctionAddresses_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (FunctionAddresses_start(B)
        || FunctionAddresses_names_pick(B, t)
        || FunctionAddresses_addrs_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, FunctionAddresses_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* APIWRAPPER_BUILDER_H */
